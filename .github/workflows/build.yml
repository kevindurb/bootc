---
name: Build
on:
  schedule:
    - cron: '05 10 * * *' # 10:05am UTC Everyday
  push:
    branches:
      - main
    paths-ignore:
      - '**/README.md'
  workflow_dispatch:
  workflow_call:

env:
  IMAGE_REGISTRY: 'ghcr.io/${{ github.repository_owner }}' # do not edit

jobs:
  build-images:
    name: Build and push image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    strategy:
      fail-fast: false
      matrix:
        include:
          - fedora_major_version: 41
            tags: latest 41
          - fedora_major_version: 42
            tags: '42'
          - fedora_major_version: rawhide
            tags: rawhide
        fedora_major_version:
          - 41
          - 42
          - rawhide
        image:
          - router
          - tablet
          - workstation
          - lima
          - gnome
          - kde

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Maximize build space
        uses: ublue-os/remove-unwanted-software@v7

      - name: Install qemu dependency
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static

      - name: Image Metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            ${{ matrix.image }}-bootc

          labels: |
            io.artifacthub.package.readme-url=https://raw.githubusercontent.com/${{ github.repository }}/main/README.md
            org.opencontainers.image.title=${{ matrix.image }}-bootc

      - name: Build Image
        id: build_image
        uses: redhat-actions/buildah-build@v2
        with:
          context: .
          containerfiles: |
            ./containers/${{matrix.image}}/Containerfile
          image: ${{ matrix.image }}-bootc
          tags: ${{ matrix.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64, linux/arm64
          build-args: |
            FEDORA_MAJOR_VERSION=${{ matrix.fedora_major_version }}
          oci: false

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Image to GHCR
        uses: redhat-actions/push-to-registry@v2
        id: push
        env:
          REGISTRY_USER: ${{ github.actor }}
          REGISTRY_PASSWORD: ${{ github.token }}
        with:
          image: ${{ steps.build_image.outputs.image }}
          tags: ${{ steps.build_image.outputs.tags }}
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - uses: sigstore/cosign-installer@v3.5.0
        if: github.event_name != 'pull_request'

      - name: Sign container image
        if: github.event_name != 'pull_request'
        run: |
          cosign sign -y --key env://COSIGN_PRIVATE_KEY ${{ env.IMAGE_REGISTRY }}/${{ steps.build_image.outputs.image }}@${TAGS}
        env:
          TAGS: ${{ steps.push.outputs.digest }}
          COSIGN_EXPERIMENTAL: false
          COSIGN_PRIVATE_KEY: ${{ secrets.SIGNING_SECRET }}
