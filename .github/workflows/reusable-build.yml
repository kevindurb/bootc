---
name: Reusable Build
on:
  workflow_dispatch:
    inputs:
      image:
        description: image to build
        type: string
      arch:
        description: architecture to build
        type: string
        default: linux/amd64
  workflow_call:
    inputs:
      image:
        description: image to build
        type: string
      arch:
        description: architecture to build
        type: string
        default: linux/amd64

jobs:
  build-images:
    name: Build and push image
    runs-on: ${{ inputs.arch == 'linux/amd64' && 'ubuntu-latest' || 'ubuntu-24.04-arm'}}

    permissions:
      contents: read
      packages: write
      id-token: write

    strategy:
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Maximize build space
        continue-on-error: true
        uses: ublue-os/remove-unwanted-software@v8

      - name: Install Podman and Buildah
        run: sudo apt update && sudo apt install -y buildah podman

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Lint Containerfile
        run: task lint:file FILE=./containers/${{ inputs.image }}/Containerfile

      - name: Image Metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            ghcr.io/kevindurb/${{ inputs.image }}

          labels: |
            io.artifacthub.package.readme-url=https://raw.githubusercontent.com/${{ github.repository }}/main/README.md
            org.opencontainers.image.title=${{ inputs.image }}

          tags: |
            type=raw,value=latest
            type=schedule,pattern={{date 'YYYY.MM.DD'}}
            type=sha

      - name: Login to GitHub Container Registry
        uses: redhat-actions/podman-login@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Image
        id: build
        uses: redhat-actions/buildah-build@v2
        with:
          oci: false
          context: .
          containerfiles: |
            ./containers/${{inputs.image}}/Containerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ inputs.arch }}

      - name: Push Image to GHCR
        uses: redhat-actions/push-to-registry@v2
        id: push
        with:
          tags: ${{ steps.meta.outputs.tags }}

      - uses: sigstore/cosign-installer@v3.5.0

      - name: Sign container image
        run: |
          images=""
          for tag in ${TAGS}; do
            images+="${tag}@${DIGEST} "
          done
          cosign sign --yes --key env://COSIGN_PRIVATE_KEY ${images}
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          COSIGN_PRIVATE_KEY: ${{ secrets.SIGNING_SECRET }}
          DIGEST: ${{ steps.push.outputs.digest }}
